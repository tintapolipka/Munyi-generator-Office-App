TODO:
Ha egy nap van ugyanott túlóra és sima kötelező óra, akkor a teljesítésibe azt írjuk:
"(3 óra + 1 óra túlóra)".
A TeljesitesSelectMenu > listaGenerator > mergeSameDates(datesArray) egyesíthetné a túlórákat is,
Ekkor a legvégén kivonnánk az összes túlórát az összes órából, és annak függvényében írnánk 
ki a mardék értékeket. KÉSZ

Ha több sor kell az órarendbe, mint amennyi van, akkor szúrjunk be minden más sorba is egyet
(Ne legyen a max csk 5)
  Ami kell még: * Az Orarendhet-nek legyen egy funkciója, ami kiszámolja a legnagyobb oszlop-
                  magaságot. (get maxColumnHeight) kész
                * A maxColumnHeight-ot érje el az órarendnap, és az alapján állítsa be, hogy 
                  hány cellát kell még beszúrnia alulra

Különböző Oszlopszélesség CSS-el megoldható? Ha igen azt beállítani!

Ha kiküldetés lenne, de pótoljuk az órát, akkor ne legyen "K"???
    Eddig kész: * lehet kiküldetést beállítani az Órarendben, a foglalkozás array[4] eleme boolean
                * az órarendNap-ban van kikuldetesSum -ami a kiküldetéssel töltött órákat számolja össze
                  adott napra
                * munyiTemplate > soringfunctions > kikuldetesTester megírva, ami az elmaradt kiküldetések
                  óráit számolja össze adott napra  
KÉSZ                

Ha túlóra elmarad, az nem jelenik meg a BELSŐ teljesítési igazolásban! KÉSZ

TeljesitesSelectMenu CLASS
function dateMerger(array) -Itt zömítjük a belső teljesítési stringjét, ezért később 
már nem tudjuk, hogy a .tulora címke értéke melyik órára vonatkozik. 
=>NEM itt kell a túlórának minősülő intézményi órát kihagyni, mert azt mát előre beleírtuk
 a dateMerger-be küldött array-be. Argumentumként a currentrawData adatot kapja, amit a 
this.rawData() merítőfunkció szolgáltat, és a Memu class-ból érkezik a TeljesitesSelectMenu
class konstruktorának küldött callback funkcióval.

Menu CLASS
teljesitesiData() funkció, nem összekeverendő a sortingFunctions.teljesitesiData objektummal,
  ami tartalmazza a helyszínek szerint szétválogatott alkalmakat.
A Menu CLASS / sortingFunctions / kivetelTartalma: (dateString)-ben:
Itt kell a túlórának minősülő intézményi órát kihagyni a belső teljesítésiről úgy, hogy fel-
tételül szabjuk, hogy ha true a foglalkozás tömbjének túlórára vonatkozó (3.) eleme, akkor
nem kell bele küldeni.
if(!kivetel[3])

Ha túlóra elmarad, az nem jelenik meg a KÜLSŐ teljesítési igazolásban sem! KÉSZ
A Menu CLASS / sortingFunctions / kivetelTartalma: (dateString)-ben:
if(!kivetel[3])- így nem kerül bele az intézményi óra jelzés a pótolt óra napján a külső,
teljesítésibe, de ettől még órarendszerűen belekerül, mintha el se maradt volna.

A Menu CLASS / sortingFunctions / iterateDates
Csak akkor akarjuk végignézni a kivételeket, ha "kinti óra ledolgozása" van, ezért ide kell 
beírni, és true-nak kell lennie a második argumentumnak a helyszinListazo()-ban:
if (kivetel && kivetel[2] == "kinti óra ledolgozása") {
          this.sortingFunctions.helyszinListazo(dateString, true);
        }

 GlobalFunctions.potoltOraCollector(dateObj)- minden elemét összehasonlítja az órarend
 szerinti órákkal, és ha azonosat talál, ahol még a túlora (2.elem) is true, akkor azt
 kihagyja a felsorolásból.  

Ha elmarad egy túlóra, akkor ne szerepeljen a MUNYI-ban se.
  A MunyiTemplate > sortingFunctions > tuloraAznap -ba sikerült beleírni, hogy ne
  minősüljön túlórának ami elmaradt, de ekkor meg kikerült a túlórából és mejelent a
  bal oldalon kötelező órákként.
  EZÉRT létrehoztam a MunyiTemplate > sortingFunctions > iterateDates-en belül az 
  elmaradtTuloraSum(datumObj,relevansFoglalkozasArr)- funkciót, ami visszadja az aznap
  elmaradt túlórák számát. Ezt azután kivonjuk a kötelezőórából (ha nem maradt el, akkor 
  mindet, ha elmaradt) KÉSZ

A Túlmmunka elszámolás implementálása
  Eddig kész:
    * az OrarendFoglalkozas  class-ban, mikor új foglalkozást viszünk fel, akkor egy prompt
      rákérdez, hogy hány órától van az óra. Ennek értéke az OrarendFoglalkozas.tuloraKezdete
      változóban kerül mentésre.
    * amikor mentjük az új OrarendFoglalkozas-t, akkor a this.tuloraCheckBox.checked és 
      a this.tuloraKezdete együtt kell szerepeljen, és már nem boolean-t adunk be, hanem ha
      volt túlóra, akkor a this.foglalkozasTulora értéke az időpont lesz, ami szintén truthy
      így elvileg ugyanúgy működik, mind eddig tette, a mentésnél és feldolgozásnál is.
    * ki kell válogatni a megtartott túlórákat, amit a Menu / sortingFunctions / iterateDates-
      ben hajtunk végre, ennek eredménye a Menu / sortingFunctions / tulMunkaData-ba kerül 
    * Beletettem a nyomtatható teljesitesi igazolások közé
  Ami kell még:
    * Vízszintes nyomtatásra kell átállítani!
    KÉSZ

Túlmunka Órarend implementálása
  Eddig kész:
   * A HTML sablon a dokumentumok mappa tulmunka_orarend.html-ben van.
   * bekérni a következő adatokat: 
    -megjegyzés (pl.: üres álláshely terhére) ezt az Orarendsablon.tuloraMegjegyzes-ben tárolom
    -feladatellátás típusa (pl. gyógypedagógiai ellátás)
    Ezt egy dialog modal segítségével teszem meg az OrarendFoglalkozas-ban.
  Ami kell még:
   
BUG: 
A külső teljesítésikben, ha két kötelező óra van azonos helyszínre, mert az egyik túlóra 
(csak akkor? Tesztelni!), akkor csak az első kötelező óráját számolja, a Menu > 
sortingFunctions > teljesitesiData-ban pedig false lesz helyette. Kiderült, hogy a 
TeljesitesSelectMenu > listaGenerator > mergeSameDates(array)-ja csinálja ezt, csak nem 
tudom miért... Feladat: Kideríteni, és megoldani, hogy egyesítse a kötelező órát, esetleg a
stringet is. KÉSZ


Munkaközösségi implementálása
  Eddig kész:
  Van olyan kivétel típus, hogy "egyedi kiküldetés", ami a [2]. eleme a mentett kivételnek.
  A kivétel tartalma ([1.] elem) egy objektum lesz a munyisor minden oszlopának megfelelő, 
  módsítható tartalommal.
  Annak érdekében, hogy kikületésesek is lehessenek, az egyedi kivételt kell használni
  "munkaközösségi értekezlet" szöveggel és "K" vagy "M/K" opcióval.
  Legyen a teljesítésikben, hogy munkarend átrendezés miatt intézmény óra.
  
  KÉSZ


 BUG:
 Ha új embert vittem föl a munkaközösségi-s verzióban, akkor nem kapott adatot a 
 belső teljesítési, ezért lefagyott.

  
  

